package autoxpress.GUI;import autoxpress.entities.Client;import java.io.IOException;import java.net.URL;import java.security.NoSuchAlgorithmException;import java.time.Duration;import java.util.List;import java.util.Optional;import java.util.ResourceBundle;import javafx.animation.TranslateTransition;import javafx.event.ActionEvent;import javafx.event.EventHandler;import javafx.fxml.FXML;import javafx.fxml.FXMLLoader;import javafx.fxml.Initializable;import javafx.scene.Node;import javafx.scene.Parent;import javafx.scene.Scene;import javafx.scene.control.Alert;import javafx.scene.control.Button;import javafx.scene.control.ButtonType;import javafx.scene.control.TabPane;import javafx.scene.control.TableColumn;import javafx.scene.control.TableView;import javafx.scene.control.TextField;import javafx.scene.input.MouseEvent;import javafx.scene.layout.Pane;import javafx.stage.Stage;import autoxpress.services.ClientCRUD;/** * FXML Controller class * * @author 21622 */public class MenuadminController implements Initializable {    @FXML    private Button btnuti;    @FXML    private Button btnoff;    @FXML    private Button btnres;    @FXML    private Button btnrec;    @FXML    private Button btncontrat;    @FXML    private Button btnveh;    @FXML    private TableView<Client> tabclient;    @FXML    private TableColumn<?, ?> tabid_client;    @FXML    private TableColumn<?, ?> tabnom_client;    @FXML    private TableColumn<?, ?> tabprenom_client;    @FXML    private TableColumn<?, ?> tabcin_client;    @FXML    private TableColumn<?, ?> tabville_client;    @FXML    private TableColumn<?, ?> tabtelephone_client;    @FXML    private TableColumn<?, ?> tabemail_client;    @FXML    private TableColumn<?, ?> tabmdp_client;    private TextField tftid_client;   /* private TextField tftville_client;    private TextField tftnom_client;    private TextField tfttelephonr_client;    private TextField tftprenom_client;    private TextField tftmdp_client;    private TextField tftcin_client;    private TextField tftemail_client;*/    @FXML    private Button btndelete_client;    @FXML    private Button btnpdf;    @FXML    private TableView<?> tabconducteur;    @FXML    private TableColumn<?, ?> tabid_conducteur;    @FXML    private TableColumn<?, ?> tabcin_conducteur;    @FXML    private TableColumn<?, ?> tabnom_conducteur;    @FXML    private TableColumn<?, ?> tabprenom_conducteur;    @FXML    private TableColumn<?, ?> tabtelephone_conducteur;    @FXML    private TableColumn<?, ?> tabemeil_conducteur;    @FXML    private TableColumn<?, ?> tabville_conducteur;    @FXML    private TableColumn<?, ?> tabmdp_conducteur;    @FXML    private TableColumn<?, ?> tabtype_de_permis;    @FXML    private TableColumn<?, ?> tabimage_conducteur;    @FXML    private Button btndelete_conducteur;    @FXML    private TabPane pageuser;    @FXML    private Button btnuti2;    @FXML    private Pane rootPane;    @FXML    private Button affclient;    @FXML    private Button affcond;    @FXML    private TextField tftid;    @FXML    private Button btnlivr;    /**     * Initializes the controller class.     */    @Override    public void initialize(URL url, ResourceBundle rb) {        pageuser.setTranslateX(-1556);        btnuti.setVisible(true);        btnuti2.setVisible(false);        // TODO    }    @FXML    private void click(MouseEvent event) {        Button button = (Button) event.getSource(); // Get the button that was clicked        button.setStyle("-fx-background-color: red;"); // Set the background color of the button to red    }    @FXML    public void switchForm(ActionEvent event) throws IOException {         }@FXML    private void delete_client(ActionEvent event) {        ClientCRUD pcd = new ClientCRUD();        if (tftid_client.getText().isEmpty()) {            Alert alert = new Alert(Alert.AlertType.ERROR);            alert.setTitle("Erreur");            alert.setContentText("Aucun client supprimée !");            alert.showAndWait();            return;        }        Alert alert = new Alert(Alert.AlertType.CONFIRMATION);        alert.setTitle("Confirmation");        alert.setHeaderText("Confirmation de suppression");        alert.setContentText("Voulez-vous vraiment supprimer le client ?");        Optional<ButtonType> result = alert.showAndWait();        if (result.isPresent() && result.get() == ButtonType.OK) {            pcd.DeleteClient(Integer.parseInt(tftid_client.getText()));            System.out.println("Client supprimé !");            //  updatetabclient();        }        //clean(event);    }    /*@FXML    private void update_client(ActionEvent event) throws NoSuchAlgorithmException {        // Récupérer les informations du client à partir des champs de texte        int id = Integer.parseInt(tftid_client.getText());        String nom = tftnom_client.getText();        String prenom = tftprenom_client.getText();        int cin = Integer.parseInt(tftcin_client.getText());        String ville = tftville_client.getText();        int telephone = Integer.parseInt(tfttelephonr_client.getText());        String email = tftemail_client.getText();        String mdp = tftmdp_client.getText();        // Créer un objet Client avec ces informations        Client client = new Client(id, nom, prenom, cin, ville, telephone, email, mdp);        // Appeler la méthode UpDateClient avec cet objet Client et l'ID du client à modifier        ClientCRUD c = new ClientCRUD();        c.UpDateClient(client, id);        // Rafraîchir la table view pour afficher les modifications        List<Client> clients = c.ClientList();        tabclient.getItems().setAll(clients);    }    @FXML    private void add_client(ActionEvent event) {    }*/    @FXML    private void generatePdf(ActionEvent event) {    }    @FXML    private void delete_conducteur(ActionEvent event) {    }    /*@FXML    private void update_conducteur(ActionEvent event) {    }    @FXML    private void add_conducteur(ActionEvent event) {    }*/    @FXML    private void runa(MouseEvent event) throws IOException {        // Load the FXML file for the second scene            FXMLLoader loader = new FXMLLoader(getClass().getResource("utilisateurs.fxml"));            Parent root = loader.load();// Create a new scene with the new root node            Scene secondScene = new Scene(root);// Get the stage from the current scene            Stage stage = (Stage) ((Node) event.getSource()).getScene().getWindow();// Set the new scene as the current scene            stage.setScene(secondScene);            stage.show();    }   /* @FXML    private void run1(MouseEvent event) {        TranslateTransition slide = new TranslateTransition();        // slide.setDuration(Duration.seconds(0.4));        slide.setDuration(javafx.util.Duration.seconds(0.4));        slide.setNode(pageuser);        slide.setToX(-1556);        slide.play();        pageuser.setTranslateX(0);        slide.setOnFinished((ActionEvent e) -> {            btnuti.setVisible(false);            btnuti2.setVisible(true);        });    }*/    @FXML    private void afficherclient(ActionEvent event) {            }    @FXML    private void afficherconducteur(ActionEvent event) {    }    @FXML    private void movetohome(ActionEvent event) {        try {            Parent avisParent = FXMLLoader.load(getClass().getResource("homepage.fxml"));            Scene avisScene = new Scene(avisParent);            Stage window = (Stage) (((Button) event.getSource()).getScene().getWindow());            window.setScene(avisScene);            window.show();        } catch (IOException e) {        }    }    @FXML    private void movetomenu(ActionEvent event) {        try {            Parent avisParent = FXMLLoader.load(getClass().getResource("loginadmin.fxml"));            Scene avisScene = new Scene(avisParent);            Stage window = (Stage) (((Button) event.getSource()).getScene().getWindow());            window.setScene(avisScene);            window.show();        } catch (IOException e) {        }                    }    @FXML    private void reclamation(ActionEvent event) {            try {            Parent avisParent = FXMLLoader.load(getClass().getResource("RecAdmin.fxml"));            Scene avisScene = new Scene(avisParent);            Stage window = (Stage) (((Button) event.getSource()).getScene().getWindow());            window.setScene(avisScene);            window.show();        } catch (IOException e) {        }            }    @FXML    private void reservation(ActionEvent event) {             try {            Parent avisParent = FXMLLoader.load(getClass().getResource("reservation.fxml"));            Scene avisScene = new Scene(avisParent);            Stage window = (Stage) (((Button) event.getSource()).getScene().getWindow());            window.setScene(avisScene);            window.show();        } catch (IOException e) {        }    }    @FXML    private void menucontrat(ActionEvent event) {          try {            Parent avisParent = FXMLLoader.load(getClass().getResource("listeContrat.fxml"));            Scene avisScene = new Scene(avisParent);            Stage window = (Stage) (((Button) event.getSource()).getScene().getWindow());            window.setScene(avisScene);            window.show();        } catch (IOException e) {        }    }    @FXML    private void menumessagess(ActionEvent event) {          try {            Parent avisParent = FXMLLoader.load(getClass().getResource("message.fxml"));            Scene avisScene = new Scene(avisParent);            Stage window = (Stage) (((Button) event.getSource()).getScene().getWindow());            window.setScene(avisScene);            window.show();        } catch (IOException e) {        }    }    @FXML    private void affOffre(ActionEvent event) {          try {            Parent avisParent = FXMLLoader.load(getClass().getResource("OffreAffAdmn.fxml"));            Scene avisScene = new Scene(avisParent);            Stage window = (Stage) (((Button) event.getSource()).getScene().getWindow());            window.setScene(avisScene);            window.show();        } catch (IOException e) {        }            }    @FXML    private void livAdmin(ActionEvent event) {         try {            Parent avisParent = FXMLLoader.load(getClass().getResource("LivraisonCondu.fxml"));            Scene avisScene = new Scene(avisParent);            Stage window = (Stage) (((Button) event.getSource()).getScene().getWindow());            window.setScene(avisScene);            window.show();        } catch (IOException e) {        }    }         }